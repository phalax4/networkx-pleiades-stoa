{"version":3,"sources":["webpack:///./src/components/mychart.js"],"names":["MyChartComponent","links","JSONData","map","d","Object","create","myGraph","nodes","fgRef","useRef","useEffect","current","zoom","nodeLabel","ref","width","height","cooldownTime","enablePointerInteraction","graphData","enableNodeDrag","backgroundColor","linkColor","nodeColor","onEngineStop","zoomToFit"],"mappings":"2FAAA,4GAoDeA,UA9Bf,WACI,IAAMC,EAAQC,EAASD,MAAME,KAAI,SAAAC,GAAC,OAAIC,OAAOC,OAAOF,MAGhDG,EAAU,CAAEC,MAFFN,EAASM,MAAML,KAAI,SAAAC,GAAC,OAAIC,OAAOC,OAAOF,MAEtBH,MAAOA,GAE/BQ,EAAQC,mBAMd,OALAC,qBAAU,WACNF,EAAMG,QAAQC,MAAM,OAErB,CAACJ,IAGA,kBAAC,IAAD,CACIK,UAAU,QACVC,IAAKN,EACLO,MAAO,IACPC,OAAQ,IACRC,aAAc,KACdC,0BAA0B,EAC1BC,UAAWb,EACXc,gBAAgB,EAChBC,gBAAgB,gBAChBC,UAAW,iBAAM,mBACjBC,UAAU,gBACVC,aAAc,kBAAMhB,EAAMG,QAAQc,UAAU","file":"8-0773fd90422518ce7ba6.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport JSONData from \"../../content/graph.json\"\r\nimport ForceGraph2D from 'react-force-graph-2d';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardImg,\r\n    CardBody,\r\n    CardFooter,\r\n    Button,\r\n    Container, Row, Col,\r\n    CardSubtitle\r\n} from \"shards-react\";\r\nimport loadable from '@loadable/component';\r\nimport { SiGraphql, SiGraphcool } from 'react-icons/si';\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\"\r\n\r\nfunction MyChartComponent() {\r\n    const links = JSONData.links.map(d => Object.create(d));\r\n    const nodes = JSONData.nodes.map(d => Object.create(d));\r\n\r\n    let myGraph = { nodes: nodes, links: links };\r\n\r\n    const fgRef = useRef();\r\n    useEffect(() => {\r\n        fgRef.current.zoom(-6000);\r\n\r\n    }, [fgRef]);\r\n\r\n    return (\r\n        <ForceGraph2D\r\n            nodeLabel=\"title\"\r\n            ref={fgRef}\r\n            width={964}\r\n            height={700}\r\n            cooldownTime={11000}\r\n            enablePointerInteraction={true}\r\n            graphData={myGraph}\r\n            enableNodeDrag={false}\r\n            backgroundColor=\"rgba(0,0,0,0)\"\r\n            linkColor={() => 'rgba(0,0,0,0.2)'}\r\n            nodeColor=\"rgba(0,0,0,1)\"\r\n            onEngineStop={() => fgRef.current.zoomToFit(600)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MyChartComponent;\r\n"],"sourceRoot":""}